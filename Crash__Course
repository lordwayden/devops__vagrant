//For vscode install vscode-icons & vagrant
trem# vagrant -v
//Gives version
# config.vm.box ## OS
# config.vm.provider ## virtualbox
# config.vm.network ## how host sees box
# config.vm.synced_folder ## acces files
# config.vm.provision ## what to setup

//Create folder.
trem# mkdir vagrant
trem# cd vagrant
-----
https://app.vagrantup.com/boxes/search
-----
trem# vagrant init ubuntu/trusty64
//Open Vagrantfile
//Make it looks like that:
# -*- mode: ruby -*-
# vi: set ft=ruby :
Vagrant.configure("2") do |config|
# Box Settings
config.vm.box = "ubuntu/trustuy64"
# config.vm.box_check_update = false
# Network Settings
# config.vm.network "forwarded_port", guest: 80, host: 8080
# config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"
# config.vm.network "private_network", ip: "192.168.33.10"
# config.vm.network "public_network"
# Folder Settings
# config.vm.synced_folder "../data", "/vagrant_data"
# Provider Settings
config.vm.provider "virtualbox" do |vb|
# # Display the VirtualBox GUI when booting the machine
# vb.gui = true
# # Customize the amount of CPU on the VM:
# vb.cpu = 4
# # Customize the amount of memory on the VM:
# vb.memory = "1024"
end
# Provision Settings
# config.vm.provision "shell", inline: <<-SHELL
# apt-get update
# apt-get install -y apache2
# SHELL
end

term# vagrant up
//it will create instance in virtualbox
term# vagrant destory
//delete box
term# vagrant suspend
term# vagrant resume
term# vagrant ssh
term# sudo apt update && install -y git && install -y apache2 // this can be done in Vagrantfile Provision Settings
term# ls /var/www
term# exit

//config Vagrantfile by uncomment first network config.vm.network
term# vagrant reload
http://localhost:8080
//or uncomment #3 Network Settings row & make connect by ip
*nix term# code /etc/hosts
admin right win term# C:\Windows\System32\drivers\etc
//open hosts & add ip 192.168.33.10 vagrant.local www.vagrant.local
//SAVE

term# vagrant ssh
term# sudo nano /var/www/html/index.html
//change Header if it necessary

//go to Vagrantfile & uncomment Folder Settings
config.vm.synced_folder ".", "/var/www/html", :nfs => { :mount_options => ["dmode=777", "fmode=666"] }
term# exit
term# vagrant reload
//Vagrantfile becomes root file!!//Than we can create index.html where Vagrantfile based and make basic HTML code.

term# vagrant destroy

//in Vagrantfile #Provision Setting write
config.vm.provision "shell, path: "bootstrap.sh"
//create bootstrap.sh in Vagrantfile folder and write there all you need to install:

## BASIC LAMP Stack
# Update Packages
apt-get update

# Upgrade Packages
apt-get upgrade

# Basic Linux Stuff
apt-get install -y git

# Apache
apt-get install -y apache2

# Enable Apache Mods
a2enmod rewrite

# Add Ondrej PPA Repo
apt-add-repository ppa:ondrej/php
apt-get update

# Install PHP
apt-get install -y php7.2

# PHP Apache Mod
apt-get install -y libapache2-mod-php7.2

# Restart Apache
service apache2 restart

# PHP Mods
apt-get install -y php7.2-common
apt-get install -y php7.2-mcrypt
apt-get install -y php7.2-zip

# Set MySQL User & Pass
debconf-set-selections <<< 'mysql-server mysql-server/root_password password root'
debconf-set-selections <<< 'mysql-server mysql-server/root_password_again password root'

# Install MySQL
apt-get install -y mysql-server

# PHP-MYSQL lib
apt-get install -y php7.2-mysql

# Restart Apache
sudo service apache2 restart

term# vagrant up
// create mysql db
term# mysql -u root -p //password is root
mysql# create database test
--> ;
mysql# use test;
mysql# create table posts(id INT AUTO_INCREMENT, text VARCHAR(250) NOT NULL, primary key (id));
mysql# show tables
--> ;
//must be 
+-------------------+
| Tables_intest |+-------------------+
| posts               |1 row in set (0.00 sec)
mysql# insert into posts(text) values('Test Post 1');
mysql# insert into posts(text) values('Test Post 2');
mysql# select * from posts;
+----+
| id | text
+----+
| 1  | Test Post 1 |
| 2  | Test Post 2 |
mysql# quit;
term# exit

//edit index.html into index.php
//edit file in <body> <h1>Vag_Doc</h1><?php phpinfo(); ?>//test in browser
//add to the head of index.php file
<?php
		$dbhost = 'localhost:3306';
		$dbuser = 'root';
		$dbpass = 'root';
		$conn = mysqli_connect($dbhost, #dbuser, $dbpass);
		
		if(! $conn ) {
			die('Could not connect: " . mysqli_error());
		}
		echo 'Connected successfully';
		mysqli_select_db($conn, 'test');
		$query = 'SELECT * FROM posts';
		$result = mysqli_query($conn, $query);
		
		mysqli_close($conn);
	?>
//under <h1>
<?php if(mysqli_num_rows($result) > 0): ?>
	<ul>
		<?php while($row = mysqli_fetch_ibject($result)): ?>
			<li><?php echo $row->text; ?></li>
		<?php endwhile; ?>
	</ul>
<?php else: ?>
	<P>No Posts</p>
<?php endif; ?>
//reload
